---
# This file is meant to be used by other roles

# expects:
# - helm_chart_name
# - helm_release_name
# - disable_helm_chart
# - helm_chart_values

# requires:
# - helm_chart_name
# - helm_release_name

- name: Prepare configuration and upgrade/install Helm chart
  vars:
    # Handling "undefined", "null", "empty" and "boolean" values all at once.
    disable_helm_chart_bool: "{{ disable_helm_chart | default(false, true) | bool }}"

    # Handling "undefined", "null" and "empty" values all at once.
    helm_chart_values_bool: "{{ helm_chart_values | default(false) | ternary(true, false) }}"

  delegate_to: localhost
  become: false
  run_once: true

  environment: { KUBECONFIG: "{{ vault_location }}/../kubeconfig" }

  always:
    - name: Clean up temporary Helm release values file
      file:
        state: absent
        path: /tmp/{{ helm_release_name }}_values.yaml

  block:
    - name: Ensure namespace `{{ system_chart_namespace }}` for system charts exists
      command: kubectl create namespace {{ system_chart_namespace }}
      register: command_kubectl_create_namespace
      failed_when:
        - command_kubectl_create_namespace is failure
        - not ("already exists" in command_kubectl_create_namespace.stderr)
      changed_when:
        - command_kubectl_create_namespace is success

    - name: Delete Helm release `{{ helm_release_name }}`
      command: helm -n {{ system_chart_namespace }} delete {{ helm_release_name }}
      when: disable_helm_chart_bool

    - name: Upgrade/Install Helm release
      when: not disable_helm_chart_bool
      block:
        - name: Upgrade/Install Helm release `{{ helm_release_name }}`
          when: helm_chart_values_bool
          block:
            - name: Copy Helm chart's custom configuration to file
              copy:
                content: "{{ helm_chart_values | to_nice_yaml }}"
                dest: /tmp/{{ helm_release_name }}_values.yaml

            - name: Install Helm chart (with custom values.yaml)
              command: |
                helm -n {{ system_chart_namespace }} upgrade --install \
                  -f /tmp/{{ helm_release_name }}_values.yaml \
                  {{ helm_release_name }} \
                  {{ system_chart_repo_name }}/{{ helm_chart_name }}

        - name: Upgrade/Install Helm release `{{ helm_release_name }}` (default values)
          when: not helm_chart_values_bool
          block:
            - name: Install Helm chart (with default values.yaml file)
              command: |
                helm -n {{ system_chart_namespace }} upgrade --install \
                  {{ helm_release_name }} \
                  {{ system_chart_repo_name }}/{{ helm_chart_name }}
