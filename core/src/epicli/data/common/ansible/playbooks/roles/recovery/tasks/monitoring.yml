---
- name: Find all prometheus snapshots
  delegate_to: "{{ recovery_source_host }}"
  find:
    paths: "{{ recovery_source_dir }}/"
    patterns: "prometheus_backup_*-*.tar.gz"
    file_type: file
    recurse: false
  register: find_prometheus_snapshots

- name: Do sanity check if there are any snapshots available
  assert:
    that: find_prometheus_snapshots.matched > 0
    fail_msg: No snapshots found.

- name: Provide parameters for the upload_via_ssh restore method
  set_fact:
    recovery_inline_script: >-
      sudo tar xzpf - --strip-components=1 -C {{ specification.storage.data_directory }}/
    # Pick the newest prometheus snapshot path
    recovery_source_file: >-
      {{ find_prometheus_snapshots.files | map(attribute='path') | max }}

- name: Execute "sha1sum -c" to verify the checksum
  delegate_to: "{{ recovery_source_host }}"
  shell: |
    cd {{ recovery_source_file | dirname }}/ && sha1sum -c {{ recovery_source_file | basename }}.sha1
  args:
    executable: /bin/bash

- name: Stop the prometheus service
  systemd:
    name: prometheus
    state: stopped

- name: Find everything in the data directory
  find:
    paths: "{{ specification.storage.data_directory }}/"
    patterns: "*"
    file_type: any
    recurse: false
  register: find_everything_in_data_directory

- name: Remove all prometheus data
  file:
    path: "{{ item }}"
    state: absent
  loop: >-
    {{ find_everything_in_data_directory.files | map(attribute='path') | list }}

- import_tasks: upload_via_ssh.yml

- name: Start the prometheus service
  systemd:
    name: prometheus
    state: started
