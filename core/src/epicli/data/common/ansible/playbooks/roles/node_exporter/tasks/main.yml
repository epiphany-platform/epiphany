---
- name: Create node_exporter system group
  group:
    name: node_exporter
    system: true
    state: present

- name: Create node_exporter system user
  user:
    name: node_exporter
    system: true
    shell: "/usr/sbin/nologin"
    group: node_exporter
    createhome: false

# - name: Ensure download directory exists
#   become: false
#   file:
#     path: "{{ specification.download_directory }}/node_exporter"
#     state: directory
#   delegate_to: localhost

# - name: Download node_exporter binary to local folder
#   become: false
#   get_url:
#     url: "{{ specification.download_urls[ansible_architecture] }}"
#     dest: "{{ specification.download_directory }}/node_exporter.tar.gz"
#     validate_certs: "{{ validate_certs | bool}}"
#   register: _download_archive
#   until: _download_archive is succeeded
#   retries: 5
#   delay: 2
#   delegate_to: localhost

# - name: Get sha512 sum of archive
#   become: false
#   stat:
#     path: "{{ specification.download_directory }}/node_exporter.tar.gz"
#     checksum_algorithm: sha512
#     get_checksum: yes
#   register: node_exporter_stat
#   delegate_to: localhost

# - name: Display sha of archive
#   debug:
#     msg: "Node Exporter SHA512: {{ node_exporter_stat.stat.checksum }}"

# - name: Verify sha512 of archive before installation.
#   fail:
#     msg: "File checksum is not correct."
#   when: node_exporter_stat.stat.checksum not in specification.download_shas

# - name: Unpack node_exporter binary
#   become: false
#   unarchive:
#     src: "{{ specification.download_directory }}/node_exporter.tar.gz"
#     dest: "{{ specification.download_directory }}/node_exporter"
#     creates: "{{ specification.download_directory }}/node_exporter/node_exporter"
#     extra_opts: [--strip-components=1]
#   delegate_to: localhost
#   check_mode: false

- name: Download Node Exporter binaries
  include_role:
    name: download
    tasks_from: download_file
  vars:
    file_arg: "{{ dependencies.node_exporter[specification.version].files | selectattr('id', 'equalto', 'node_exporter') | list | first }}"

- name: Create /opt/node_exporter directories
  become: yes
  file:
    path: "{{ item }}"
    recurse: yes
    owner: root
    group: "node_exporter"
    mode: 0750
    state: directory
  with_items:
  - /opt/node_exporter

- name: Unpack kafka_exporter binary
  become: false
  unarchive:
    remote_src: yes
    src: "{{ file.dest_path }}"
    dest: "/opt/node_exporter"
    creates: "/opt/node_exporter/node_exporter"
    extra_opts: [--strip-components=1]
    mode: 0755
    owner: root
    group: node_exporter
  check_mode: false
  notify:
    - restart prometheus-node-exporter

- name: Install node_exporter service to systemd
  template:
    src: prometheus-node-exporter.service.j2
    dest: /etc/systemd/system/prometheus-node-exporter.service
    owner: root
    group: root
    mode: 0644

- name: Configure systemd to use node_exporter service
  systemd:
    daemon_reload: yes
    enabled: yes
    name: prometheus-node-exporter.service

- name: Start exporter
  service:
    name: prometheus-node-exporter
    state: started

- name: Copy file_sd_config to prometheus hosts
  template:
    dest: "{{ specification.config_for_prometheus.prometheus_config_dir }}/file_sd/node-{{ inventory_hostname }}.yml"
    src: file_sd_config.yml.j2
    owner: root
    group: root
    mode: 0644
  delegate_to: "{{ item }}"
  with_inventory_hostnames:
    - prometheus
  notify: restart prometheus on remote servers
