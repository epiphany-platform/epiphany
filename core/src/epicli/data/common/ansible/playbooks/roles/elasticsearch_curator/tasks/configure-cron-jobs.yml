---
- name: Remove old Ansible managed Elasticsearch Curator cron jobs
  block:
    - name: Get crontab
      command: crontab -l
      register: crontab
      changed_when: false

    - name: Get Ansible managed Elasticsearch Curator cron jobs
      set_fact:
        managed_curator_cron_jobs: >-
          {{ managed_curator_cron_jobs | default([]) + [ item | regex_replace('^[^:]+:\s*', '', ignorecase=True) ] }}
      loop_control:
        extended: yes
      loop: "{{ crontab.stdout_lines }}"
      when:
        - item is regex('^#ansible', ignorecase=True)
        - ansible_loop.nextitem is defined
        - ansible_loop.nextitem is regex('\\bcurator_cli\\b')

    - name: Remove old Ansible managed Elasticsearch Curator cron jobs
      cron:
        name: "{{ item }}"
        state: absent
      loop: "{{ managed_curator_cron_jobs }}"
      when: managed_curator_cron_jobs is defined

- name: Configure cron jobs that delete Elasticsearch indices
  block:
    - name: Set curator_cli commands for cron jobs
      set_fact:
        curator_cli_cmds: "{{ curator_cli_cmds | default([]) + [ curator_cmd ] }}"
      vars:
        curator_cmd: curator_cli --host '{{ elasticsearch_ip }}' delete_indices
          --filter_list '{{ item.filter_list | to_json(separators=(',',':')) }}'
          --ignore_empty_list                        # separators used to remove spaces
      loop: "{{ specification.delete_indices_cron_jobs }}"

    - name: Test curator_cli commands with --dry-run
      command: "{{ curator_test_cmd }}"
      changed_when: false
      failed_when: false
      register: result
      vars:
        curator_test_cmd: "{{ item | replace('curator_cli', 'curator_cli --dry-run') }}"
      loop_control:
        label: "{{ curator_test_cmd }}"
      loop: "{{ curator_cli_cmds }}"

    - name: Check test results
      assert:
        that: item.rc == 0
        quiet: true
      loop_control:
        label: "{{ item.cmd }}"
      loop: "{{ result.results }}"

    - name: Configure cron jobs that delete Elasticsearch indices
      cron:
        # NOTE: name should be unique since changing it will result in a new cron task being created
        name: "Elasticsearch Curator job that deletes indices #{{ ansible_loop.index }}"
        job: "{{ curator_cli_cmds[ansible_loop.index0] }}"
        minute:   "{{ item.cron.minute       | default('*') }}"
        hour:     "{{ item.cron.hour         | default('*') }}"
        day:      "{{ item.cron.day          | default('*') }}"
        weekday:  "{{ item.cron.weekday      | default('*') }}"
        month:    "{{ item.cron.month        | default('*') }}"
        disabled: "{{ not (item.cron.enabled | default(True)) }}"
      loop_control:
        extended: yes
      loop: "{{ specification.delete_indices_cron_jobs }}"
  when:
    - specification.delete_indices_cron_jobs is defined