---

- name: Download Zookeeper binaries
  include_role:
    name: download
    tasks_from: download_file
  vars:
    file_name: "{{ zookeeper_defaults.zookeeper_bin_filename }}"

- name: Create Zookeeper directories
  become: yes
  file:
    path: "/opt/zookeeper-{{ zookeeper_defaults.zookeeper_version }}"
    recurse: yes
    owner: "{{ zookeeper_defaults.zookeeper_user }}"
    group: "{{ zookeeper_defaults.zookeeper_group }}"
    mode: u=rwx,g=rx,o=rx
    state: directory

- name: Uncompress Zookeeper installation file
  unarchive:
    remote_src: yes
    src: "{{ download_directory }}/{{ zookeeper_defaults.zookeeper_bin_filename }}"
    dest: /opt/zookeeper-{{ zookeeper_defaults.zookeeper_version }}
    creates: "/opt/zookeeper-{{ zookeeper_defaults.zookeeper_version }}/bin"
    extra_opts: [--strip-components=1]
    mode: u=rwx,g=rx,o=rx
    owner: "{{ zookeeper_defaults.zookeeper_user }}"
    group: "{{ zookeeper_defaults.zookeeper_group }}"

- name: Copy configuration from previous version
  copy:
    remote_src: yes
    src: /opt/zookeeper/conf/
    dest: /opt/zookeeper-{{ zookeeper_defaults.zookeeper_version }}/conf
    mode: preserve

- name: Link /opt/zookeeper to recently installed version
  file:
    dest: /opt/zookeeper
    state: link
    src: /opt/zookeeper-{{ zookeeper_defaults.zookeeper_version }}
    force: yes

- name: Remove previous version binaries
  file:
    path: /opt/zookeeper-{{ before_upgrade_zookeeper_version }}
    state: absent

- name: Improve Zookeeper service and run zookeeper service using symbolic link instead of versioned path
  lineinfile:
    path: /lib/systemd/system/zookeeper.service
    state: present
    regexp: '^ExecStart=/opt/zookeeper-.*'
    line: "ExecStart=/opt/zookeeper/bin/zkServer.sh start-foreground"

- name: Check if any snapshots exists in data dir what is necessary in order to run zookeeper after upgrade
  find:
    paths: "{{ zookeeper_defaults.zookeeper_data_dir }}/version-2"
    patterns: 'snapshot*.'
    use_regex: yes
  register: snapshot_exists

- name: Copy empty snapshot if not exists
  copy:
    dest: "{{ zookeeper_defaults.zookeeper_data_dir }}/version-2" 
    src: roles/zookeeper/files/snapshot.0
    mode: u=rw,g=r,o=r
    owner: "{{ zookeeper_defaults.zookeeper_user }}"
    group: "{{ zookeeper_defaults.zookeeper_group }}"
  when: snapshot_exists.matched == 0

- name: Start Zookeeper service
  systemd:
    name: zookeeper
    state: started
    daemon-reload: yes
