---
- name: Get cluster version
  environment:
    KUBECONFIG: "/home/{{ admin_user.name }}/.kube/config"
  shell: >-
    set -o pipefail &&
    kubectl version --short -o json | jq --raw-output '.serverVersion.gitVersion'
  register: cluster_version
  changed_when: false

- name: Get kubelet version
  environment:
    KUBECONFIG: "/home/{{ admin_user.name }}/.kube/config"
  shell: >-
    kubectl get node {{ inventory_hostname }} -o jsonpath='{.status.nodeInfo.kubeletVersion}'
  register: kubelet_version
  changed_when: false

- name: Upgrade master to v{{ version }}
  include_tasks: upgrade_master.yml
  vars:
    version: "{{ ver }}"
    cni_version: "{{ cni_ver }}"
  when:
    - groups['kubernetes_master'][0] == inventory_hostname
    - cluster_version.stdout is version('v' + version, '<=')

- name: Upgrade node to v{{ version }}
  include_tasks: upgrade_node.yml
  vars:
    version: "{{ ver }}"
    cni_version: "{{ cni_ver }}"
  when:
    - inventory_hostname in groups['kubernetes_node']
    - kubelet_version.stdout is version('v' + version, '<=')
