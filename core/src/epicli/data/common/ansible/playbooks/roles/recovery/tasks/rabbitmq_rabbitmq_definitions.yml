---
- name: Find all rabbitmq etc archives
  delegate_to: "{{ recovery_source_host }}"
  find:
    paths: "{{ recovery_source_dir }}/"
    patterns: "rabbitmq_definitions_*-*.tar.gz"
    file_type: file
    recurse: false
  register: find_rabbitmq_definitions_archives

- name: Do sanity check if there are any etc archives available
  assert:
    that: find_rabbitmq_definitions_archives.matched > 0
    fail_msg: No etc archives found.

- name: Pick the newest etc archive
  set_fact:
    newest_definitions_archive_path: >-
      {{ find_rabbitmq_definitions_archives.files | map(attribute='path') | max }}

- name: Transfer etc archive via rsync
  import_tasks: upload_via_rsync.yml
  vars:
    artifacts:
      - "{{ newest_definitions_archive_path }}"
      - "{{ newest_definitions_archive_path }}.sha1"

- name: Slurp etc archive checksum from file
  slurp:
    path: "{{ recovery_dir }}/{{ newest_definitions_archive_path | basename }}.sha1"
  register: slurp_definitions_archive_checksum

- name: Calculate checksum from etc archive
  stat:
    path: "{{ recovery_dir }}/{{ newest_definitions_archive_path | basename }}"
    get_attributes: false
    get_checksum: true
    get_mime: false
    checksum_algorithm: sha1
  register: stat_definitions_archive

- name: Compare etc archive checksums
  assert:
    that: (slurp_definitions_archive_checksum.content | b64decode | trim).startswith(stat_definitions_archive.stat.checksum)
    fail_msg: Checksums do not match.

- name: Ensure a folder to hold definitions in exists
  file:
    path: /var/lib/rabbitmq/definitions/
    state: directory

- name: Extract etc archive to etc directory
  unarchive:
    dest: /var/lib/rabbitmq/definitions/
    src: "{{ recovery_dir }}/{{ newest_definitions_archive_path | basename }}"
    remote_src: true

- name: Ensure management api is enabled
  shell: |
    rabbitmq-plugins enable rabbitmq_management
  args:
    executable: /bin/bash

- name: Ensure the rabbitmqadmin binary is installed
  shell: |
    curl -fsSL http://localhost:15672/cli/rabbitmqadmin \
         -o /usr/local/bin/rabbitmqadmin \
    && chmod +x /usr/local/bin/rabbitmqadmin
  args:
    creates: /usr/local/bin/rabbitmqadmin
    executable: /bin/bash

- name: Import definitions json file
  shell: |
    rabbitmqadmin import /var/lib/rabbitmq/definitions/definitions-{{ snapshot_name }}.json
  args:
    executable: /bin/bash
  vars:
    snapshot_name: >-
      {{ newest_definitions_archive_path | basename | regex_replace('^rabbitmq_definitions_(.*).tar.gz$', '\1') }}
