---
- name: upgrade-master | Wait for cluster's readiness
  include_tasks: utils/wait.yml

# This resolves issues (related to the etcd encryption) causing upgrades to hang.
# Legacy clusters may have incomplete configs, thus it is corrected here, before any `kubeadm upgrade` command is executed.
# If config is incomplete, kubeadm rewrites the kube-apiserver.yaml manifest file without the etcd feature enabled.
# In turn, this causes Kuberentes components such as the controller-manager to lose ability to read internal (kube-system) secrets, then
# any upgrade attempt freezes and the cluster at hand becomes unusable.
- name: upgrade-master | Make sure the etcd encryption feature is properly configured (if enabled)
  include_tasks: patch-kubeadm-etcd-encryption.yml

- name: upgrade-master | Update imageRepository in kubeadm-config ConfigMap
  include_tasks: update-kubeadm-image-repository.yml

- name: upgrade-master | Reconfigure rabbitmq application
  include_tasks: reconfigure-rabbitmq-app.yml

- name: upgrade-master | Reconfigure keycloak application
  include_tasks: reconfigure-auth-service-app.yml

- name: upgrade-master | Upgrade kubernetes-dashboard
  include_tasks: upgrade-kubernetes-dashboard.yml

- name: upgrade-master | Drain master in preparation for maintenance
  include_tasks: utils/drain.yml

- name: upgrade-master | Upgrade, configure packages
  block:
    - name: upgrade-master | Hold packages for Debian family
      include_tasks: Debian/hold-packages.yml
      when: ansible_os_family == "Debian"

    - name: upgrade-master | Install kubeadm
      include_tasks: "{{ ansible_os_family }}/install-kubeadm.yml"

    - name: upgrade-master | Upgrade network components for Kubernetes >= v1.16.x
      include_tasks: upgrade-network-components.yml
      when:
        - version is version('1.16.7', '>=')

    # CoreDNS is overwritten (upgraded or downgraded) by 'kubeadm upgrade apply', see CoreDNS version matrix in downgrade-coredns.yml.
    # kubeadm upgrade is not able to downgrade coredns ConfigMap properly (at least when upgrade from 1.14.6 to 1.15.10)
    # which may cause the update to hang.
    - name: upgrade-master | Downgrade CoreDNS to K8s built-in version
      include_tasks: downgrade-coredns.yml
      when:
        - version is version('1.16.0', '<')

    - name: upgrade-master | Wait for cluster's readiness
      include_tasks: utils/wait.yml

    # Note: Usage of the --config flag for reconfiguring the cluster during upgrade is not recommended since v1.16
    - name: upgrade-master | Validate whether cluster is upgradeable
      # Ignore CoreDNSUnsupportedPlugins error since coredns-migration does not support 'hosts' plugin.
      # This issue is fixed in K8s v1.18, see https://github.com/kubernetes/kubernetes/pull/88482
      command: >-
        {%- if version is version('1.18.0', '>=') -%}
          kubeadm upgrade plan v{{ version }}
        {%- else -%}
          kubeadm upgrade plan v{{ version }} --ignore-preflight-errors=CoreDNSUnsupportedPlugins
        {%- endif -%}
      register: result
      until:
        - result is succeeded
      retries: 20
      delay: 30
      changed_when: false

    # Note: Usage of the --config flag for reconfiguring the cluster during upgrade is not recommended since v1.16
    - name: upgrade-master | Upgrade K8s cluster to v{{ version }}
      # Ignore CoreDNSUnsupportedPlugins error since coredns-migration does not support 'hosts' plugin.
      # This issue is fixed in K8s v1.18, see https://github.com/kubernetes/kubernetes/pull/88482
      command: >-
        {%- if version is version('1.18.0', '>=') -%}
          kubeadm upgrade apply -y v{{ version }}
        {%- else -%}
          kubeadm upgrade apply -y v{{ version }} --ignore-preflight-errors=CoreDNSUnsupportedPlugins
        {%- endif -%}
      register: result
      until:
        - result is succeeded
      retries: 20
      delay: 30
      changed_when: false
      when:
        - cluster_version is version('v' + version, '<')

    - name: Install kubelet and kubectl for {{ version }}
      include_tasks: >-
        {%- if cni_in_kubelet is undefined or not cni_in_kubelet -%}
          {{ ansible_os_family }}/install-packages.yml
        {%- else -%}
          {{ ansible_os_family }}/install-packages-cni-in-kubelet.yml
        {%- endif -%}
      when:
        - result is succeeded

- name: upgrade-master | Wait for cluster's readiness
  include_tasks: utils/wait.yml

# 'kubeadm upgrade apply' overwrites Epiphany's customized CoreDNS deployment so we restore it.
# This task should be run each time K8s is upgraded to the latest version.
# Keep Epiphany's CoreDNS version in synch with K8s CoreDNS version.
- name: upgrade-master | Deploy customized CoreDNS for latest Kubernetes (1.17.7)
  include_tasks: upgrade-coredns.yml
  when:
    - version is version('1.17.7', '==')

- name: upgrade-master | Upgrade kubeadm-config.yml if exists
  include_tasks: upgrade-kubeadm-config.yml

- name: upgrade-master | Upgrade Docker  # this may restart Docker daemon
  include_tasks: docker.yml

- name: upgrade-master | Reload kubelet and docker
  include_tasks: utils/reload-kubelet-and-docker.yml

- name: upgrade-master | Uncordon master - mark master as schedulable
  include_tasks: utils/uncordon.yml

- name: upgrade-master | Verify component versions and node status
  include_tasks: kubernetes/verify-upgrade.yml
