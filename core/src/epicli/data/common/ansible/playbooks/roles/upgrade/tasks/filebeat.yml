---
- name: Filebeat as DaemonSet | Get information about helm releases
  delegate_to: localhost
  become: false
  run_once: true
  environment: { KUBECONFIG: "{{ vault_location }}/../kubeconfig" }
  command: helm list --output json
  register: helm_list_releases

- name: Check if exist filebeat release in default namespace, if exist set the filebeat release name
  set_fact:
    filebeat_release_name: "{{ item.name }}"
  when: item.name == specification.helm_chart_name
  with_items: "{{ (helm_list_releases.stdout|from_json) }}"

- name: Reinstall Filebeat as DaemonSet from default namespace to custom namespace for "k8s as cloud service"
  when:
    - filebeat_release_name is defined
    - k8s_as_cloud_service is defined
    - k8s_as_cloud_service
  block: 
    - name: Include uninstall task for Filebeat as DaemonSet in default namespace for "k8s as cloud service"
      include_role:
        name: filebeat
        tasks_from: uninstall-filebeat-as-daemonset.yml

    - name: Include install task for Filebeat as DaemonSet in custom namespace for "k8s as cloud service"
      include_role:
        name: filebeat
        tasks_from: install-filebeat-as-daemonset.yml

- name: Filebeat as System Service | Get information about installed packages as facts
  package_facts:
    manager: auto
  when: ansible_facts.packages is undefined

- name: Filebeat as System Service | Test if filebeat package is installed
  assert:
    that: ansible_facts.packages['filebeat'] is defined
    fail_msg: filebeat package not found, nothing to update
    quiet: true

- name: Filebeat as System Service | Print versions
  debug:
    msg:
      - "Installed version: {{ ansible_facts.packages['filebeat'][0].version }}"
      - "Target version: {{ filebeat_version }}"

- name: Update Filebeat as System Service
  when:
    - filebeat_version is version(ansible_facts.packages['filebeat'][0].version, '>=')
  block:
    - name: Filebeat as System Service | Backup configuration file (filebeat.yml)
      copy:
        remote_src: true
        src: /etc/filebeat/filebeat.yml
        dest: /etc/filebeat/filebeat.yml.bak_{{ ansible_facts.packages['filebeat'][0].version }}

    - import_role:
        name: filebeat
        tasks_from: install-filebeat-as-system-service

    - import_role:
        name: filebeat
        tasks_from: configure-auditd

    - import_role:
        name: filebeat
        tasks_from: configure-filebeat
