---
# Delete old kubernetes-dashboard from kube-system, new dashboard has its own namespace

- name: Check if any resource with label 'k8s-app=kubernetes-dashboard' exists in kube-system
  environment:
    KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
  shell: kubectl get all -l k8s-app=kubernetes-dashboard -n kube-system
  register: result
  changed_when: false

- name: Delete all resources with label 'k8s-app=kubernetes-dashboard' from kube-system
  environment:
    KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
  shell: kubectl delete all -l k8s-app=kubernetes-dashboard -n kube-system
  when:
    - not 'No resources found' in result.stderr

- name: Check if 'kubernetes-dashboard-minimal' Role or RoleBinding exists in kube-system
  environment:
    KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
  shell: kubectl get Role,RoleBinding kubernetes-dashboard-minimal -n kube-system
  register: result
  changed_when: false
  failed_when:
    - result.rc != 0
    - not 'not found' in result.stderr

- name: Delete 'kubernetes-dashboard-minimal' Role and RoleBinding from kube-system
  environment:
    KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
  shell: kubectl delete Role,RoleBinding kubernetes-dashboard-minimal -n kube-system
  when:
    - not 'not found' in result.stderr

# Deploy new version of kubernetes-dashboard

- name: Check if kubernetes-dashboard is already deployed
  environment:
    KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
  shell: kubectl get pods --all-namespaces --selector=k8s-app=kubernetes-dashboard
  changed_when: false
  register: result

- name: Deploy kubernetes-dashboard
  block:
    - name: Copy dashboard deployment file
      template:
        dest: /home/{{ admin_user.name }}/kubernetes-dashboard.yml
        src: roles/kubernetes_master/templates/kubernetes-dashboard.yml.j2
        owner: "{{ admin_user.name }}"
        group: "{{ admin_user.name }}"

    - name: Apply kubernetes-dashboard.yml
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: kubectl apply -f /home/{{ admin_user.name }}/kubernetes-dashboard.yml
  when:
    - not 'kubernetes-dashboard' in result.stdout