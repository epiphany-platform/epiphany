---
- include_tasks: check-user.yml

- name: Set unsupported_components_checklist fact
  set_fact:
     unsupported_components_checklist: "{{ unsupported_roles | selectattr('distro','equalto', ansible_distribution) | selectattr('arch','equalto', ansible_architecture) | map(attribute='roles') | list | flatten | intersect(group_names) }}"

- name: Check if components are supported by the architecture
  assert:
    that: unsupported_components_checklist | length > 0
    fail_msg: "Your architecture {{ ansible_architecture }} is not supported at {{ ansible_distribution }} by following components in inventory -> {{ unsupported_components_checklist }}."
    success_msg: "Your architecture {{ ansible_architecture }} is supported at {{ ansible_distribution }} by all components in inventory."

- include_tasks: check-os.yml

- name: Check if existing PostgreSQL needs to be migrated to distribution installed from PostgreSQL repository
  block:

  - name: Check if PostgreSQL has been installed from Software Collections repository
    command:  rpm -q rh-postgresql10-postgresql-server
    failed_when:
      - rpm_status.rc != 0
      - rpm_status.stdout.find('is not installed') == -1
    changed_when: no
    register: rpm_status

  # TODO: Add link to PostgreSQL migration from Software Collections to PostgreSQL installation from PostgreSQL repository
  - name: Validate if PostgreSQL has been installed from Software Collections repository
    assert:
      that: rpm_status.stdout.find('is not installed') != -1
      fail_msg: "You have not supported PostgreSQL installed from Software Collections repository, please migrate it according to procedure described at: 
                 https://github.com/epiphany-platform/epiphany/blob/v0.6/docs/home/howto/PREREQUISITES.md#note-about-postgresql-preflight-check"
      success_msg:  "PostgresSQL installation is supported"

  when:
    - ansible_os_family == "RedHat"
    - "'postgresql' in groups"
    - "inventory_hostname in groups['postgresql']"

- import_role:
    name: preflight_facts
    tasks_from: store

- import_role:
    name: preflight_facts
    tasks_from: assert

- name: Wait for epiphany-lvm-merge.service to finish  # to avoid 'Read-only file system' error
  when: ansible_os_family == "RedHat"
  block:
    - name: Check if epiphany-lvm-merge.service exists  # exists only on Azure
      service_facts: null

    - name: Wait for epiphany-lvm-merge.service to finish
      when:
        - ansible_facts.services['epiphany-lvm-merge.service'] is defined
        - ansible_facts.services['epiphany-lvm-merge.service'].status != "disabled"
      wait_for:  # at the end service disables itself so symlink is removed
        path: /etc/systemd/system/default.target.wants/epiphany-lvm-merge.service
        state: absent
        timeout: 300
