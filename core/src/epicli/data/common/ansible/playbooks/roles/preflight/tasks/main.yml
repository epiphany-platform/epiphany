---

- name: Set is OS supported to false
  set_fact:
     is_os_supported: false
  changed_when: false

- name: Check if OS is supported
  set_fact:
     is_os_supported: true
  loop: "{{ supported_os }}"
  when:
    - ansible_distribution == item.name
    - ansible_distribution_version is version(item.version, item.comparison_operator)

- name: List of supported OSes
  set_fact:
     message_supported_oeses: "{% for item in supported_os %} {{ item.name }} {{ item.comparison_operator }} {{ item.version }}{%- if not loop.last -%},{% endif %}{% endfor %}"
  loop: "{{ supported_os }}"
  changed_when: false

- name: Check OS version
  assert:
    that: is_os_supported
    fail_msg: "Your operating system [{{ ansible_distribution  }} - {{ ansible_distribution_version }}] version and distribution doesn't meet system requirements.
              Distributions meetings requirements are: {{ message_supported_oeses }}"
    success_msg:  "Operating system [{{ ansible_distribution  }} - {{ ansible_distribution_version }}] version and distribution meet system requirements."

- name: Check if PostgreSQL version needs to be migrated to version installed from PostgreSQL repository
  command:  rpm -q rh-postgresql10-postgresql-servery
  failed_when: no
  changed_when: no
  register: rpm_check

- name: Check PostgreSQL version
  assert:
    that: rpm_check.stdout.find('is not installed') == -1
    fail_msg: "You have not supported PostgreSQL version, please migrate this according to procedure ... "
    success_msg:  "Your PostgresSQL installation is supported"
  when:
    - inventory_hostname in groups['postgresql']
  