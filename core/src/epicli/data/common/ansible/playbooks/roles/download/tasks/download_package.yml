---
- name: download_package | Set architecture and OS properties
  set_fact:
    arch: "{{ arch_map[ansible_architecture] }}"
    os_distribution: >-
      {{ (ansible_distribution == "Oracle Linux") | ternary('RedHat', ansible_distribution) }}
    os_distribution_version: >-
      {{ ansible_distribution_major_version if (ansible_os_family == "RedHat") else ansible_distribution_version }}

- name: download_package | Set properties from configuration
  set_fact:
    file: >-
      {{ specification.downloads.packages[package_arg.id][arch][os_distribution + '-' + os_distribution_version]
         | selectattr('version', 'match', '.*' if (package_arg.version is not defined) else package_arg.version)
         | list | first | combine(package_arg) | combine({ 'arch': arch, 'os_distribution': os_distribution,
           'os_distribution_version': os_distribution_version }) }}

- name: download_package | Set dynamic properties
  set_fact:
    file: >-
      {{ file
           | combine({ 'dest_path': specification.remote_downloads_dir + '/' + relative_dest_path })
           | combine({ 'cached_file_path': specification.local_downloads_dir + '/' + relative_dest_path })
           | combine({ 'checksum_algorithm': 'sha256' if (file.sha256 is defined) else 'sha512' }) }}
  vars:
    relative_dest_path: >-
      {{ 'packages/' + file.id + '/' + file.version + '/' + file.arch + '/'
         + file.os_distribution + '/' + file.os_distribution_version + '/'
         + (file.url | basename) if file.url is defined else file.file_name }}

- name: download_package | Download '{{ file.id }}' v{{ file.version }}
  include_tasks: download_file_worker.yml
  vars:
    file_arg: "{{ file }}"
