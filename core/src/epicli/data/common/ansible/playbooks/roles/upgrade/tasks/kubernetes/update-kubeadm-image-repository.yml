---
# Note: Usage of the --config flag for reconfiguring the cluster during upgrade is not recommended since v1.16
- name: upgrade-master | Get value of imageRepository from kubeadm-config ConfigMap
  shell: kubeadm config view
  changed_when: false
  register: result

- name: upgrade-master | Set current value of imageRepository as fact
  set_fact:
    kubeadm_image_repository: "{{ (result.stdout|from_yaml).imageRepository }}"

- name: upgrade-master | Set new value for imageRepository as fact
  set_fact:
    new_kubeadm_image_repository: >-
      {%- if kubeadm_image_repository is search(':') -%}
        {{ kubeadm_image_repository | regex_replace('^(?P<host>.+):(?P<port>\d+)', image_registry_address) }}
      {%- else -%}
        {{ image_registry_address }}/{{ kubeadm_image_repository }}
      {%- endif -%}

- name: upgrade-master | Patch imageRepository in kubeadm-config ConfigMap
  when:
    - kubeadm_image_repository != new_kubeadm_image_repository
  environment:
    KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
  shell: |-
    set -o pipefail &&
    # do not use --export option since it has been deprecated in 1.14
    kubectl get cm kubeadm-config -n kube-system -o yaml |
    sed 's|imageRepository: {{ kubeadm_image_repository }}|imageRepository: {{ new_kubeadm_image_repository }}|g' |
    xargs --null -I config_map_content \
    kubectl patch cm kubeadm-config -n kube-system --patch config_map_content
  args:
    executable: /bin/bash