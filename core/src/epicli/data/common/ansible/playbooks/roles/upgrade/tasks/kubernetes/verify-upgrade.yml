---
- name: Verify cluster version
  block:
    - name: verify-upgrade | Include get-cluster-version.yml
      include_tasks: get-cluster-version.yml # sets cluster_version

    - name: verify-upgrade | Verify cluster version
      assert:
        that: "'{{ version }}' in cluster_version.stdout"
  when:
    - inventory_hostname in groups['kubernetes_master']

- name: Verify kubectl version
  block:
    - name: verify-upgrade | Get kubectl version
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: >-
        set -o pipefail &&
        kubectl version --client --short -o json | jq --raw-output '.clientVersion.gitVersion'
      changed_when: false
      register: kubectl_version

    - name: verify-upgrade | Verify kubectl version
      assert:
        that: "'{{ version }}' in kubectl_version.stdout"

- name: Verify kubeadm version
  block:
    - name: verify-upgrade | Get kubeadm version
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: kubeadm version -o short
      changed_when: false
      register: kubeadm_version

    - name: verify-upgrade | Verify kubeadm version
      assert:
        that: "'{{ version }}' in kubeadm_version.stdout"

- name: verify-upgrade | Verify kubelet version from API server and get node status
  environment:
    KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
  shell: >-
    set -o pipefail &&
    kubectl get nodes {{ inventory_hostname }} |
    awk 'NR==1 { for (col=1; col<=NF; col++) { columns[$col] = col } };
         NR==2 { print $columns["STATUS"], $columns["VERSION"] }'
  changed_when: false
  register: node_status_and_version
  until: version in node_status_and_version.stdout
  retries: 30 # 1min
  delay: 2

- name: verify-upgrade | Verify node status
  assert:
    that: "'Ready' in node_status_and_version.stdout"