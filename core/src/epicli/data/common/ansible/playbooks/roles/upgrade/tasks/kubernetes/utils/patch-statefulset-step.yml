---
# Expected vars:
# - image_registry_address
# - image_regexp
# - _namespace
# - _statefulset
# - _documents

- name: k8s/utils | Patch statefulset (step)
  when:
    - _names_and_images_updated != _names_and_images
    - _containers_updated | length > 0

  block:
    - name: k8s/utils | Patch statefulset {{ _statefulset }} (step)
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      command: |
        kubectl patch statefulsets.apps {{ _statefulset }} \
          --namespace {{ _namespace }} \
          --patch '{{ _patch | to_json }}'

  vars:
    # Select correct documents
    _documents_filtered: >-
      {{ _documents | selectattr('metadata.namespace', 'eq', _namespace)
                    | selectattr('metadata.name', 'eq', _statefulset)
                    | list }}

    _containers: >-
      {{ _documents_filtered | map(attribute='spec.template.spec.containers') | flatten }}

    _names: >-
      {{ _containers | map(attribute='name') | list }}

    _images: >-
      {{ _containers | map(attribute='image') | list }}

    # Prepend image urls with the registry address
    _images_updated: >-
      {{ _images | map('regex_replace', '^' ~ image_registry_address ~ '/', '')
                 | map('regex_replace', '^', image_registry_address ~ '/')
                 | list }}

    _names_and_images: >-
      {{ _names | zip(_images) | list }}

    _names_and_images_updated: >-
      {{ _names | zip(_images_updated) | list }}

    # Update containers (yields list of dictionaries)
    _containers_updated: >-
      {%- set output = [] -%}
      {%- for name, image in _names_and_images_updated -%}
        {%- if image | regex_search(image_regexp) -%}
          {{- output.append(dict(name=name, image=image)) -}}
        {%- endif -%}
      {%- endfor -%}
      {{- output -}}

    _patch:
      spec:
        template:
          spec:
            containers: "{{ _containers_updated }}"
