# Create share location for backup filesystem
---
- name: Configure NFS host
  block:
  - name: Install NFS server on Debian
    apt:
      name: nfs-kernel-server
      update_cache: yes
      state: present
    when:
      - ansible_os_family == "Debian"

  - name: Install NFS server on RedHat
    yum:
      name: nfs-utils
      update_cache: yes
      state: present
    when:
      - ansible_os_family == "RedHat"

  - name: Create share location
    file:
      path: "{{ backup_dir }}"
      state: directory
      mode: 0777

  - name: Assign server access to clients through NFS export
    template:
      src: nfs-config/templates/exports.j2
      dest: /etc/exports
      mode: 0644
      owner: root
      group: root

  - name: Export filesystem on Debian
    command: /usr/sbin/exportfs -r
    when:
      - ansible_os_family == "Debian"
  
  - name: Export filesystem on RedHat
    command: /usr/sbin/exportfs -r
    when:
      - ansible_os_family == "RedHat"

  - name: Restart NFS server on Debian
    systemd:
      name: nfs-kernel-server
      state: restarted
    when:
      - ansible_os_family == "Debian"

  - name: Restart NFS server on RedHat
    systemd:
      name: nfs-server
      state: restarted
    when:
      - ansible_os_family == "RedHat"
  when:
    - groups['repository'][0] == inventory_hostname

- name: Configure nfs clients
  block:
  - name: Install NFS Common on Debian
    apt:
      name: nfs-common
      update_cache: yes
      state: present
    when:
      - ansible_os_family == "Debian"

  - name: Install nfs-utils on RedHat
    yum:
      name: nfs-utils
      update_cache: yes
      state: present
    when:
      - ansible_os_family == "RedHat"
  
  - name: Mount shared system
    mount:
      src: "{{ hostvars[groups['repository'][0]]['ansible_default_ipv4']['address'] }}:{{ backup_dir }}"
      path: "{{ backup_dir }}"
      fstype: nfs
      state: mounted
  when:
    - not groups['repository'][0] == inventory_hostname