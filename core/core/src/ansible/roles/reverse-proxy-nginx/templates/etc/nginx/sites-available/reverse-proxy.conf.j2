# {{ ansible_managed }}

upstream {{ item.backend_name }} {
    {% for backend in item.backends %}
    server {{ backend }};
    {% endfor %}
}

server {
    listen {{ item.listen_https }} ssl;
    server_name {{ item.domain }};

    ssl_protocols {{ item.ssl.protocols }};
    ssl_ciphers "{{ item.ssl.ciphers }}";
    ssl_prefer_server_ciphers {{ item.ssl.prefer_server_ciphers }};
    ssl_session_cache {{ item.ssl.session_cache }};
    ssl_session_timeout {{ item.ssl.session_timeout }};
    ssl_stapling {{ item.ssl.ssl_stapling }};
    ssl_stapling_verify {{ item.ssl.ssl_stapling_verify }};
    resolver {{ item.ssl.resolver }};
    resolver_timeout {{ item.ssl.resolver_timeout }};
    add_header {{ item.ssl.sts_header }};

    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_certificate /etc/nginx/ssl/{{ nginx_ssl_override_filename | default(item.domains[0]) }}.pem;
    ssl_certificate_key /etc/nginx/ssl/{{ nginx_ssl_override_filename | default(item.domains[0]) }}.key;
    ssl_trusted_certificate /etc/nginx/ssl/{{ nginx_ssl_override_filename | default(item.domains[0]) }}.pem;

  {% if item.cache_all_locations.enabled %}
    expires {{ item.cache_all_locations.duration }};
    add_header Cache-Control public;
    add_header ETag "";
  {% endif %}

  {% if item.basic_auth | bool %}
    auth_basic "{{ item.basic_auth_message }}";
    auth_basic_user_file /etc/nginx/.htpasswd;
  {% endif %}

    location / {
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Host      $http_host;
        proxy_pass         http://{{ item.backend_name }};
    }
}
